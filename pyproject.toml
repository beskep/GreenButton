[project]
name = "greenbutton"
version = "0.1.0"
description = "GreenButton"
authors = [{ name = "beskep", email = "beskep@naver.com" }]
readme = "README.md"
requires-python = ">= 3.12"
dependencies = [
    "polars>=1.13.1",
    "fastexcel>=0.12.0",
    "xlsxwriter>=3.2.0",
    "pingouin>=0.5.5",
    "u8darts>=0.31.0",
    "pythermalcomfort>=2.10.0",
    # plot
    "seaborn>=0.13.2",
    "cmasher>=1.9.0",
    "cmap>=0.4.0",
    "pyqt6>=6.7.1",
    # database
    "sqlalchemy>=2.0.36",
    "psycopg2>=2.9.10",
    "pymysql>=1.1.1",
    "pyodbc>=5.2.0",
    # etc
    "more-itertools>=10.5.0",
    "pydash>=8.0.4",
    "rich>=13.9.4",
    "loguru>=0.7.2",
    "cyclopts>=3.2.0",
    "msgspec>=0.18.6",
    "whenever>=0.6.12",
    "holidays>=0.60",
    "pathvalidate>=3.2.1",
    "ipykernel>=6.29.5",
]

[dependency-groups]
dev = [
    "ruff>=0.9.0",
    "pylint>=3.3.1",
    "mypy>=1.13.0",
    "pyright>=1.1.389",
    "pytest>=8.3.3",
    "pytest-sugar>=1.0.0",
    "pytest-xdist>=3.6.1",
    "hypothesis>=6.121.0",
    "typos>=1.27.3",
    "scalene>=1.5.48",
    "wat>=0.4.4",
]

[tool.ruff]
preview = true
output-format = "concise"

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",    # flake8-annotations
    "COM",    # flake8-commas
    "CPY",    # flake8-copyright
    "D1",     # pydocstyle: D1*
    "E1",     # pycodestyle: E1*
    "E2",     # pycodestyle: E2*
    "FIX",    # flake8-fixme
    "INP",    # flake8-no-pep420
    "ISC001", # flake8-implicit-str-concat: single-line-implicit-string-concatenation
    "PD",     # pandas-vet
    "Q",      # flake8-quotes
    "S",      # flake8-bandit
    "SIM105", # flake8-simplify: suppressible-exception
    "T20",    # flake8-print
    "TD",     # flake8-todos
]
extend-safe-fixes = [
    "EM", # flake8-errmsg
    "PT", # flake8-pytest-style
    "TC", # flake8-type-checking
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
allow-dunder-method-names = ["__rich__"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.pylint.messages_control]
confidence = ["HIGH", "CONTROL_FLOW", "INFERENCE", "INFERENCE_FAILURE"]
enable = ["bad-inline-option", "useless-suppression"]
disable = ["R", "C", "fixme", "no-member", "unreachable"]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
disable_error_code = ["import", "import-untyped"]
enable_incomplete_feature = "NewGenericSyntax"
check_untyped_defs = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--doctest-modules",
    "--hypothesis-show-statistics",
    "--ignore-glob",
    "*_ignore*",
]
filterwarnings = [
    "ignore::DeprecationWarning:holidays.deprecations.v1_incompatibility",
    "ignore::RuntimeWarning:scipy.optimize._optimize",
]

[tool.typos.files]
extend-exclude = ["*.csv", "*.pyi"]

[tool.typos.default]
extend-ignore-re = [
    "(?Rm)^.*#\\s*spellchecker:disable-line$",
    "(?s)(#|//)\\s*spellchecker:off.*?\\n\\s*(#|//)\\s*spellchecker:on",
]

[tool.typos.type.py.extend-words]
POIT = "POIT" # yechon_gov
